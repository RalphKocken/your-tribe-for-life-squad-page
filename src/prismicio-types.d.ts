// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type CreatorsDocumentDataSlicesSlice = never;

/**
 * Content for creators documents
 */
interface CreatorsDocumentData {
  /**
   * name field in *creators*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: creators.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  name: prismic.RichTextField;

  /**
   * link field in *creators*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: creators.link
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;

  /**
   * imageralph field in *creators*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: creators.imageralph
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  imageralph: prismic.ImageField<never>;

  /**
   * Slice Zone field in *creators*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: creators.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<CreatorsDocumentDataSlicesSlice>;
}

/**
 * creators document from Prismic
 *
 * - **API ID**: `creators`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CreatorsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<CreatorsDocumentData>,
    "creators",
    Lang
  >;

/**
 * Content for prisoners documents
 */
interface PrisonersDocumentData {
  /**
   * name field in *prisoners*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: prisoners.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  name: prismic.RichTextField;

  /**
   * link field in *prisoners*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: prisoners.link
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;

  /**
   * image field in *prisoners*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: prisoners.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * prisoners document from Prismic
 *
 * - **API ID**: `prisoners`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PrisonersDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<PrisonersDocumentData>,
    "prisoners",
    Lang
  >;

export type AllDocumentTypes = CreatorsDocument | PrisonersDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      CreatorsDocument,
      CreatorsDocumentData,
      CreatorsDocumentDataSlicesSlice,
      PrisonersDocument,
      PrisonersDocumentData,
      AllDocumentTypes,
    };
  }
}
